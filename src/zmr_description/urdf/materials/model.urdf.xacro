<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Included URDF/XACRO Files -->
  <xacro:include filename="$(find zmr_description)/urdf/materials/materials.urdf.xacro" />
  <xacro:include filename="$(find zmr_description)/urdf/materials/parameters.urdf.xacro" />
  <xacro:include filename="$(find zmr_description)/urdf/materials/drive_model.urdf.xacro" />

  <!-- Robot Description -->
  <xacro:macro name="zmr_model" params="namespace">

    <!-- Driver -->
    <xacro:zmr_drive_model namespace="${namespace}"/>

    <!-- base link -->
    <link name="${namespace}/base_link">
      <visual>
        <origin xyz="0 0 0.0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${body_cylinder_length}" radius="${body_cylinder_radius}"/>
        </geometry>
        <material name="blue_body"/>
      </visual>

      <collision>
        <origin xyz="0 0 0.0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${body_cylinder_length}" radius="${body_cylinder_radius}"/>
        </geometry>
        <material name="blue_body"/>
      </collision>

      <inertial>
        <mass value="${body_cylinder_mass}"/>
        <xacro:cylinder_inertia m="${body_cylinder_mass}" r="${body_cylinder_radius}" h="${body_cylinder_length}" />
      </inertial>
    </link>

    <!-- laser link -->
    <link name="${namespace}/laser_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${laser_cylinder_length}" radius="${laser_cylinder_radius}"/>
        </geometry>
        <material name="black_laser"/>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${laser_cylinder_length}" radius="${laser_cylinder_radius}"/>
        </geometry>
        <material name="black_laser"/>
      </collision>

      <inertial>
        <mass value="${laser_cylinder_mass}"/>
        <xacro:cylinder_inertia m="${laser_cylinder_mass}" r="${laser_cylinder_radius}" h="${laser_cylinder_length}" />
      </inertial>
    </link>
    <!-- laser joint -->
    <joint name="${namespace}/laser_joint" type="fixed">
      <parent link="${namespace}/base_link" />
      <child link="${namespace}/laser_link" />
      <origin xyz="0 0 0.075" />
    </joint>

    <!-- imu link -->
    <link name="${namespace}/imu_link">
      <visual>
        <origin xyz="0 0 0.0" rpy="0 0 0"/>
        <geometry>
          <box size="${imu_box_length} ${imu_box_width} ${imu_box_height}"/>
        </geometry>
      </visual>

      <collision>
        <origin xyz="0 0 0.0" rpy="0 0 0"/>
        <geometry>
          <box size="${imu_box_length} ${imu_box_width} ${imu_box_height}"/>
        </geometry>
      </collision>

      <inertial>
        <mass value="${imu_box_mass}"/>
        <xacro:box_inertia m="${imu_box_mass}" x="${imu_box_length}" y="${imu_box_width}" z="${imu_box_height}" />
      </inertial>
    </link>
    <!-- imu joint -->
    <joint name="${namespace}/imu_joint" type="fixed">
      <parent link="${namespace}/base_link" />
      <child link="${namespace}/imu_link" />
      <origin xyz="0 0 0.02" />
    </joint>

    <!-- right wheel link -->
    <link name="${namespace}/right_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="1.57079 0 0"/>
        <geometry>
          <cylinder length="${wheel_cylinder_length}" radius="${wheel_cylinder_radius}"/>
        </geometry>
        <material name="black_wheel"/>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="1.57079 0 0"/>
        <geometry>
          <cylinder length="${wheel_cylinder_length}" radius="${wheel_cylinder_radius}"/>
        </geometry>
        <material name="black_wheel"/>
      </collision>

      <inertial>
        <mass value="${wheel_cylinder_mass}"/>
        <xacro:cylinder_inertia m="${wheel_cylinder_mass}" r="${wheel_cylinder_radius}" h="${wheel_cylinder_length}" />
      </inertial>
    </link>
    <!-- right wheel joint -->
    <joint name="${namespace}/right_wheel_joint" type="continuous">
      <parent link="${namespace}/base_link" />
      <child link="${namespace}/right_wheel_link" />
      <origin xyz="-0.02 -0.10 -0.06" />
      <axis xyz="0 1 0" />
    </joint>

    <!-- left wheel link -->
    <link name="${namespace}/left_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="1.57079 0 0"/>
        <geometry>
          <cylinder length="${wheel_cylinder_length}" radius="${wheel_cylinder_radius}"/>
        </geometry>
        <material name="black_wheel"/>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="1.57079 0 0"/>
        <geometry>
          <cylinder length="${wheel_cylinder_length}" radius="${wheel_cylinder_radius}"/>
        </geometry>
        <material name="black_wheel"/>
      </collision>

      <inertial>
        <mass value="${wheel_cylinder_mass}"/>
        <xacro:cylinder_inertia m="${wheel_cylinder_mass}" r="${wheel_cylinder_radius}" h="${wheel_cylinder_length}" />
      </inertial>
    </link>
    <!-- left wheel joint -->
    <joint name="${namespace}/left_wheel_joint" type="continuous">
      <parent link="${namespace}/base_link" />
      <child link="${namespace}/left_wheel_link" />
      <origin xyz="-0.02 0.10 -0.06" />
      <axis xyz="0 1 0" />
    </joint>

    <!-- caster link -->
    <link name="${namespace}/caster_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="${caster_sphere_radius}"/>
        </geometry>
        <material name="black_caster"/>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="1.57079 0 0"/>
        <geometry>
            <sphere radius="${caster_sphere_radius}"/>
        </geometry>
        <material name="black_caster"/>
      </collision>
    
      <inertial>
        <mass value="${caster_sphere_mass}"/>
        <xacro:sphere_inertia m="${caster_sphere_mass}" r="${caster_sphere_radius}" />
      </inertial>
    </link>
    <!-- caster joint -->
    <joint name="${namespace}/caster_joint" type="fixed">
      <parent link="${namespace}/base_link" />
      <child link="${namespace}/caster_link" />
      <origin xyz="0.06 0.0 -0.076" />
    </joint>

    <!-- Gazebo - caster joint -->
    <gazebo reference="${namespace}/caster_link">
      <material>Gazebo/Black</material>
      <mu1 value="0.0"/>
      <mu2 value="0.0"/>
      <kp value="1000000.0" />
      <kd value="10.0" />
      <!-- <fdir1 value="0 0 1"/> -->
    </gazebo>

    <!-- Gazebo - imu link -->
    <gazebo reference="${namespace}/imu_link">
      <sensor name="imu_sensor" type="imu">
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
          <ros>
            <namespace>${namespace}</namespace>
            <remapping>~/out:=imu</remapping>
          </ros>
          <initial_orientation_as_reference>false</initial_orientation_as_reference>
        </plugin>
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
      </sensor>
    </gazebo>

    <!-- Gazebo - laser link -->
    <gazebo reference="${namespace}/laser_link">
      <sensor name="laser_sensor" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <material>Gazebo/Black</material>
        <update_rate>5</update_rate>
        <pose>0 0 0.075 0 0 0</pose>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1.000000</resolution>
              <min_angle>0.000000</min_angle>
              <max_angle>6.280000</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.120000</min>
            <max>3.5</max>
            <resolution>0.015000</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>

        <plugin name="laserscan" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <namespace>${namespace}</namespace>
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>${namespace}/laser_link</frame_name>
        </plugin>
      </sensor>
    </gazebo>

  </xacro:macro>

</robot>